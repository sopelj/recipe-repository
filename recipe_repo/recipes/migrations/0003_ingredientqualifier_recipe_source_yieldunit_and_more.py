# Generated by Django 4.2.13 on 2024-07-19 02:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import easy_thumbnails.fields


class Migration(migrations.Migration):

    dependencies = [
        ('food', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('units', '0002_alter_unit_options'),
        ('recipes', '0002_alter_category_name_alter_category_name_en_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='IngredientQualifier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=100, null=True, unique=True, verbose_name='Title')),
                ('title_fr', models.CharField(max_length=100, null=True, unique=True, verbose_name='Title')),
                ('title_ja', models.CharField(max_length=100, null=True, unique=True, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Ingredient Qualifier',
                'verbose_name_plural': 'Ingredient Qualifiers',
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=150, null=True, unique=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=150, null=True, unique=True, verbose_name='Name')),
                ('name_ja', models.CharField(max_length=150, null=True, unique=True, verbose_name='Name')),
                (
                    'slug',
                    models.SlugField(
                        help_text='Automatically generated from the name',
                        unique=True,
                        verbose_name='Slug',
                    ),
                ),
                (
                    'slug_en',
                    models.SlugField(
                        help_text='Automatically generated from the name',
                        null=True,
                        unique=True,
                        verbose_name='Slug',
                    ),
                ),
                (
                    'slug_fr',
                    models.SlugField(
                        help_text='Automatically generated from the name',
                        null=True,
                        unique=True,
                        verbose_name='Slug',
                    ),
                ),
                (
                    'slug_ja',
                    models.SlugField(
                        help_text='Automatically generated from the name',
                        null=True,
                        unique=True,
                        verbose_name='Slug',
                    ),
                ),
                (
                    'image',
                    easy_thumbnails.fields.ThumbnailerImageField(
                        blank=True,
                        null=True,
                        upload_to='images/recipes/',
                        verbose_name='Image',
                    ),
                ),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('prep_time', models.DurationField(blank=True, null=True, verbose_name='Prep time')),
                ('cook_time', models.DurationField(blank=True, null=True, verbose_name='Cook time')),
                ('cook_time_max', models.DurationField(blank=True, null=True, verbose_name='Max cook time')),
                ('servings', models.PositiveIntegerField(blank=True, null=True, verbose_name='Servings')),
                ('yield_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name='Yield')),
                ('source_value', models.CharField(blank=True, max_length=250, null=True, verbose_name='Source Value')),
                (
                    'added_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='my_recipes',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Added by',
                    ),
                ),
                (
                    'categories',
                    models.ManyToManyField(
                        blank=True,
                        related_name='recipes',
                        to='recipes.category',
                        verbose_name='Categories',
                    ),
                ),
                (
                    'parent_recipes',
                    models.ManyToManyField(
                        blank=True,
                        related_name='sub_recipes',
                        to='recipes.recipe',
                        verbose_name='Parent recipes',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                (
                    'type',
                    models.PositiveIntegerField(
                        choices=[(1, 'URL'), (2, 'Book'), (3, 'Person'), (4, 'Other')],
                        default=1,
                        verbose_name='Type',
                    ),
                ),
                ('value', models.CharField(blank=True, max_length=200, null=True, verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Sources',
            },
        ),
        migrations.CreateModel(
            name='YieldUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=150, null=True, unique=True, verbose_name='Name')),
                ('name_fr', models.CharField(max_length=150, null=True, unique=True, verbose_name='Name')),
                ('name_ja', models.CharField(max_length=150, null=True, unique=True, verbose_name='Name')),
                ('name_plural', models.CharField(blank=True, max_length=150, null=True, verbose_name='Plural Name')),
                ('name_plural_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='Plural Name')),
                ('name_plural_fr', models.CharField(blank=True, max_length=150, null=True, verbose_name='Plural Name')),
                ('name_plural_ja', models.CharField(blank=True, max_length=150, null=True, verbose_name='Plural Name')),
            ],
            options={
                'verbose_name': 'Yield Unit',
                'verbose_name_plural': 'Yield Units',
            },
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'rating',
                    models.PositiveIntegerField(
                        blank=True,
                        choices=[(0, '☆☆☆☆☆'), (1, '★☆☆☆☆'), (2, '★★☆☆☆'), (3, '★★★☆☆'), (4, '★★★★☆'), (5, '★★★★★')],
                        null=True,
                        verbose_name='Rating',
                    ),
                ),
                (
                    'recipe',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='ratings',
                        to='recipes.recipe',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='ratings',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'User Rating',
                'verbose_name_plural': 'User Ratings',
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(blank=True, null=True, verbose_name='Order')),
                ('text', models.TextField(blank=True, verbose_name='Text')),
                ('text_en', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('text_fr', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('text_ja', models.TextField(blank=True, null=True, verbose_name='Text')),
                (
                    'recipe',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='steps',
                        to='recipes.recipe',
                        verbose_name='Recipe',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Step',
                'verbose_name_plural': 'Steps',
                'ordering': ('order',),
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='rated_by',
            field=models.ManyToManyField(
                blank=True,
                related_name='rated_recipes',
                through='recipes.UserRating',
                to=settings.AUTH_USER_MODEL,
                verbose_name='Rated by',
            ),
        ),
        migrations.AddField(
            model_name='recipe',
            name='source',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='recipes.source',
                verbose_name='Source',
            ),
        ),
        migrations.AddField(
            model_name='recipe',
            name='yield_unit',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='recipes.yieldunit',
            ),
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(blank=True, null=True, verbose_name='Order')),
                (
                    'amount',
                    models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Amount'),
                ),
                (
                    'amount_max',
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                        verbose_name='Max Amount',
                    ),
                ),
                ('note', models.CharField(blank=True, max_length=100, verbose_name='Note')),
                ('note_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Note')),
                ('note_fr', models.CharField(blank=True, max_length=100, null=True, verbose_name='Note')),
                ('note_ja', models.CharField(blank=True, max_length=100, null=True, verbose_name='Note')),
                ('optional', models.BooleanField(default=False, verbose_name='Optional')),
                (
                    'food',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='food.food',
                        verbose_name='Food',
                    ),
                ),
                (
                    'qualifier',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='recipes.ingredientqualifier',
                        verbose_name='Qualifier',
                    ),
                ),
                (
                    'recipe',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='ingredients',
                        to='recipes.recipe',
                        verbose_name='Recipe',
                    ),
                ),
                (
                    'unit',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='units.unit',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'ordering': ('order',),
            },
        ),
    ]
