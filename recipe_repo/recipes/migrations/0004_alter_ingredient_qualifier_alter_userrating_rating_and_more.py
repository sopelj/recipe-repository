# Generated by Django 4.2.13 on 2024-07-20 23:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("recipes", "0003_ingredientqualifier_recipe_source_yieldunit_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="ingredient",
            name="qualifier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="recipes.ingredientqualifier",
                verbose_name="Qualifier",
            ),
        ),
        migrations.AlterField(
            model_name="userrating",
            name="rating",
            field=models.PositiveIntegerField(
                choices=[(0, "☆☆☆☆☆"), (1, "★☆☆☆☆"), (2, "★★☆☆☆"), (3, "★★★☆☆"), (4, "★★★★☆"), (5, "★★★★★")],
                default=0,
                verbose_name="Rating",
            ),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name="NutritionInformation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("calories", models.PositiveIntegerField(help_text="in kilo-calories", verbose_name="Calories")),
                (
                    "serving_size",
                    models.PositiveIntegerField(
                        help_text="number of servings this corresponds to",
                        verbose_name="Serving Size",
                    ),
                ),
                (
                    "carbohydrate",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="in grams",
                        null=True,
                        verbose_name="Carbohydrates",
                    ),
                ),
                (
                    "protein",
                    models.PositiveIntegerField(blank=True, help_text="in grams", null=True, verbose_name="Protein"),
                ),
                ("fat", models.PositiveIntegerField(blank=True, help_text="in grams", null=True, verbose_name="Fat")),
                (
                    "saturated_fat",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="in grams",
                        null=True,
                        verbose_name="Saturated Fat",
                    ),
                ),
                (
                    "trans_fat",
                    models.PositiveIntegerField(blank=True, help_text="in grams", null=True, verbose_name="Trans Fat"),
                ),
                (
                    "unsaturated_fat",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="in grams",
                        null=True,
                        verbose_name="Unsaturated Fat",
                    ),
                ),
                (
                    "cholesterol",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="in grams",
                        null=True,
                        verbose_name="Cholesterol",
                    ),
                ),
                (
                    "sodium",
                    models.PositiveIntegerField(blank=True, help_text="in grams", null=True, verbose_name="Sodium"),
                ),
                (
                    "fiber",
                    models.PositiveIntegerField(blank=True, help_text="in grams", null=True, verbose_name="Fiber"),
                ),
                (
                    "sugar",
                    models.PositiveIntegerField(blank=True, help_text="in grams", null=True, verbose_name="Sugar"),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="recipes.recipe",
                        verbose_name="Recipe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nutritional Information",
                "verbose_name_plural": "Nutritional Information",
            },
        ),
        migrations.CreateModel(
            name="IngredientGroup",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=150, unique=True, verbose_name="Name")),
                ("name_en", models.CharField(max_length=150, null=True, unique=True, verbose_name="Name")),
                ("name_fr", models.CharField(max_length=150, null=True, unique=True, verbose_name="Name")),
                ("name_ja", models.CharField(max_length=150, null=True, unique=True, verbose_name="Name")),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ingredient_groups",
                        to="recipes.recipe",
                        verbose_name="Recipe",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ingredient",
                "verbose_name_plural": "Ingredients",
            },
        ),
        migrations.AddField(
            model_name="ingredient",
            name="group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="ingredients",
                to="recipes.ingredientgroup",
                verbose_name="Group",
            ),
        ),
    ]
