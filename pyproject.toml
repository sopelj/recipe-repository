[project]
name = "django-recipe-repo"
readme = "README.md"
description = "Simple recipe app built with Django and VueJS"
authors = [
    { name = "Jesse Sopel", email = "jesse.sopel@gmail.com" },
]
license = { file = "LICENSE" }
version = "0.1.0"
requires-python = ">=3.12"
classifiers=[
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "django>=5.0",
    "django-admin-interface",
    "django-admin-sortable2",
    "django-colorfield",
    "django-breeze@git+https://github.com/Louxsdon/django-breeze@master",
    "django-environ",
    "django-extensions",
    "django-cachalot",
    "django-modeltranslation",
    "django-query-inspector",
    "djangorestframework",
    "easy-thumbnails",
    "ipython",
    "pillow",
    "pint",
    "recipe-scrapers>=15.0.0",
    "werkzeug",
    "django-stubs-ext[compatible-mypy]>=5.1.0",
    "psycopg[c]>=3.1.8",
]

[project.optional-dependencies]
test = [
    "pytest>=7.2.1",
    "pytest-cov",
    "pytest-asyncio",
    "pytest-django",
]
ldap = [
    "django-auth-ldap",
]
production = [
    "granian",
    "pymemcache"
]

[project.urls]
"Source code" = "https://github.com/sopelj/recipe-repository/"
"Bug Tracker" = "https://github.com/sopelj/recipe-repository/issues"

[tool.hatch]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.default]
python = "3.12"
type = "virtual"
installer = "uv"

[tool.hatch.envs.test]
features = ["test"]

[tool.hatch.envs.test.scripts]
cov = "pytest -vvv --asyncio-mode=auto --cov=recipe_repo --cov-branch --cov-report=xml --cov-report=term-missing"
no-cov = "cov --no-cov"

[tool.mypy]
enable_incomplete_feature = "NewGenericSyntax"
plugins = ["mypy_django_plugin.main"]
enable_error_code = [
  "truthy-bool",
  "truthy-iterable",
  "redundant-expr",
  "unused-awaitable",
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
]
explicit_package_bases = true
ignore_missing_imports = true
strict = true
warn_unreachable = true

[tool.black]
line-length = 120
target-version = ["py312"]
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.ruff_cache
  | env
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.django-stubs]
django_settings_module = "recipe_repo.settings"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "recipe_repo.settings"
python_files = ["test_*.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "def main",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]
omit = ["**/migrations/**"]

[tool.ruff]
fix = true
line-length = 120
target-version = "py312"
extend-exclude = ["**migrations"]

[tool.ruff.lint]
ignore = ["D100", "D101", "D104", "D105", "D106", "D203", "D212", "PLR2004", "RUF012", "TD002", "TD003"]
select = [
    "A",
    "ASYNC",
    "B",
    "COM",
    "C4",
    "D",
    "E",
    "ERA",
    "F",
    "FA",
    "FLY",
    "G",
    "I",
    "N",
    "PTH",
    "PT",
    "PL",
    "PLE",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SLF",
    "SIM",
    "TD",
    "TCH",
    "UP",
]

[tool.ruff.lint.per-file-ignores]
"**/tests/**.py" = [
    "D103",  # No docstrings in tests needed
    "S101",  # We needs asserts in tests
    "SLF001",
]
"**/migrations/*" = []
